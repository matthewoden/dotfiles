[hub]
        protocol = https
[user]
        name = {{ git_full_name }}
        email = {{ git_email }}
[alias]
        a = add
        st = status
        s = status
        co = checkout
        cob = checkout -b
        sw = switch
        swc = switch -c
        c = checkout
        ci = commit
        noff = merge --no-ff
        plr = pull --rebase
        amend = commit --amend
        wip = commit --no-verify -am "WIP"

        # https://ses4j.github.io/2020/04/01/git-alias-recent-branches/
        lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
        br = branch
        rn = branch -m

        publish = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
        # publish = "!git push -u origin $(git rev-parse --abbrev-ref HEAD) && ~/.githooks/post_push"

        unstage = reset -q HEAD --
        discard = checkout --
        uncommit = reset --mixed HEAD~

        l = log --graph --decorate --oneline --abbrev-commit --all
        h = log --graph --decorate --oneline --abbrev-commit

        issues = !hub browse -- issues
        # Copy current branch name to clipboard (macOS only)
        cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

        remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "
        #alias = "!f() { git config --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort}; f"

        fix = "!f() { git co main && git pull && git cob fix/$1; }; f "
        feature = "!f() { git co main && git pull && git cob feature/$1; }; f "

        remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
[core]
        excludesfile = ~/.gitignore_global
        editor = nvim
[apply]
        whitespace = nowarn
[mergetool]
        tool = kaleidoscope
        keepBackup = false
[difftool]
        tool = kaleidoscope
        prompt = false
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to surpress warning message
        default = simple
        followTags = true
[github]
        user = {{ git_user }}
